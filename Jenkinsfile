pipeline {
  agent {
    docker {
      image 'python:3.11'
      args '-v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONARQUBE = credentials('GlobalSonar')  // ‡∏à‡∏∞‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡πá‡πÑ‡∏î‡πâ
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/Poramee-Promkeeree/Python-FastAPI.git'
      }
    }

    stage('Setup venv') {
      steps {
        sh '''
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
        '''
      }
    }

    stage('Run Tests & Coverage') {
      steps {
        sh '''
          export PYTHONPATH="$PWD"
          venv/bin/pytest --maxfail=1 --disable-warnings -q \
            --cov=app --cov-report=xml:coverage.xml
        '''
      }
    }

    // üîß ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô agent ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡πÄ‡∏ï‡∏à‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏û sonarsource/sonar-scanner-cli
    stage('SonarQube Analysis') {
      agent {
        docker {
          image 'sonarsource/sonar-scanner-cli:latest'
          // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á mount docker.sock ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å docker ‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å
        }
      }
      steps {
        withSonarQubeEnv('SonarQube servers') {
          // ‡πÉ‡∏ä‡πâ single-quoted heredoc ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á Groovy interpolation warning ‡∏Ç‡∏≠‡∏á secret
          sh '''
            export PYTHONPATH="$PWD"
            sonar-scanner
          '''
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        sh 'docker build -t fastapi-app:latest .'
      }
    }

    stage('Deploy Container') {
      steps {
        sh '''
          docker rm -f fastapi-app || true
          docker run -d --name fastapi-app -p 8000:8000 fastapi-app:latest
        '''
      }
    }
  }

  post {
    always {
      echo "Pipeline finished"
    }
  }
}
